<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Front-end</title>
  
  <subtitle>Nick</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-01T05:08:19.118Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Nick Arron</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac外接显示器kernal_task内存占用高问题解决</title>
    <link href="http://yoursite.com/2018/06/01/mac%E5%A4%96%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8kernal-task%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2018/06/01/mac外接显示器kernal-task内存占用高问题解决/</id>
    <published>2018-06-01T02:12:27.000Z</published>
    <updated>2018-06-01T05:08:19.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>mac连接外接显示器之后，kernal_task占用的cpu飙升，通常达到500%，电脑卡顿，打字都是2s后才显示。遍寻方案无果，在英文网站上发现了解决方法。记录如下。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="osx版本-10-13-2-解决方案"><a href="#osx版本-10-13-2-解决方案" class="headerlink" title="osx版本 10.13.2 解决方案"></a>osx版本 10.13.2 解决方案</h2><ol><li>开机时进入Recovery Mode（开机的时候按住Command + R）</li><li>选择语言之后，左上角 Utility &gt; Terminal开启终端，命令行输入<code>csrutil disable</code>（禁用系统文件保护）</li><li>重启，此处原文章要求修改此文件<br><code>/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlatformPlugin.kext/Contents/Resources/[MacModelIdentifier].plist</code><br>其中MacModelIdentifier是指Mac的识别符，查看方式（Mac &gt; 关于本机 &gt; 系统报告 &gt; 型号识别符），找到对应文件后，将此文件改为 <code>bugfix.plist</code>（或者其他任意名字）。<br>但是我的系统版本号为 11.4，并没有对应文件。 此时参考低版本的方法，将<code>`/System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/</code>目录下的<code>X86PlatformShim.kext</code>改名为<code>X86PlatformShim.kext.disabled</code>。</li><li>清除kext缓存  （不确定是否需要这步）<br><code>sudo touch /System/Library/Extensions</code></li><li>重启，查看kernal_task的CPU占用是否有所改善，如果可以的话，重新进入Recovery Mode，<code>csrutil enable</code></li></ol><h2 id="低版本解决方法"><a href="#低版本解决方法" class="headerlink" title="低版本解决方法"></a>低版本解决方法</h2><ol><li>可能低版本没有系统文件保护，所以给出的资料就是高版本的其中几步。</li><li><p>通过重命名关闭kext  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> cd /System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/Plugins  </div><div class="line">sudo mv X86PlatformShim.kext X86PlatformShim.kext.disabled</div></pre></td></tr></table></figure></li><li><p>清除缓存<br><code>sudo touch /System/Library/Extensions/</code></p></li><li>重启</li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://apple.stackexchange.com/questions/164923/rmbp-kernel-task-spikes-when-connecting-more-than-one-external-monitor/164947#164947?newreg=652defab48ed44f79bc988237555df6d" target="_blank" rel="noopener">国外论坛的解决方法</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h1&gt;&lt;p&gt;mac连接外接显示器之后，kernal_task占用的cpu飙升，通常达到500%，电脑卡顿，打字都是2s后才显示。
      
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>使用DeDRM去除kindle的DRM保护</title>
    <link href="http://yoursite.com/2017/12/21/%E4%BD%BF%E7%94%A8DeDRM%E5%8E%BB%E9%99%A4Kindle%E7%9A%84DRM%E4%BF%9D%E6%8A%A4/"/>
    <id>http://yoursite.com/2017/12/21/使用DeDRM去除Kindle的DRM保护/</id>
    <published>2017-12-21T06:04:18.000Z</published>
    <updated>2018-01-23T03:54:57.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用DeDRM去除kindle的DRM保护"><a href="#使用DeDRM去除kindle的DRM保护" class="headerlink" title="使用DeDRM去除kindle的DRM保护"></a>使用DeDRM去除kindle的DRM保护</h1><h2 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h2><ol><li>通常使用<a href="https://calibre-ebook.com/download" target="_blank" rel="noopener">calibre</a>来管理kindle书库</li><li><a href="https://github.com/apprenticeharper/DeDRM_tools/blob/master/DeDRM_calibre_plugin/DeDRM_plugin.zip/" target="_blank" rel="noopener">calibre用于破解DeDRM的插件——DeDRM</a>，认准这家，网上其他插件可能我用的方法不对或者已经失效了，没有可用的。此插件可以单独使用，也可以和calibre结合，本文只针对使用calibre的情况。如下所示：<br><img src="https://ws1.sinaimg.cn/large/68cfab99ly1fmobznrwe5j21n80lqjvg.jpg" alt=""><br>注：下载之后不要解压，保留压缩文件供calibre使用</li></ol><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol><li><p>Calibre -&gt; Preferences -&gt; 插件（高级选项中）-&gt; 从文件加载插件（右下角），会报一些警告，忽略即可。如图：<br><img src="https://ws1.sinaimg.cn/large/68cfab99ly1fmobyuiz3oj21fo1587gq.jpg" alt=""></p></li><li><p>双击插件，打开选项 ‘eInk Kindle ebooks’，添加自己kindle的序列号，是必须的，否则破解DRM的时候会报错。序列号在kindle上，查看方法请自行百度。<br> <img src="https://ws1.sinaimg.cn/large/68cfab99ly1fmoc8hkr9aj20m20wen0u.jpg" alt=""> </p></li><li><p>从亚马逊下载书籍，在”管理我的内容和设备”中，点击左侧的三个点的按钮，下载书籍到电脑上。<br><img src="https://ws1.sinaimg.cn/large/68cfab99ly1fmocce6mctj20ya0hy45y.jpg" alt=""></p></li><li><p>把书导入calibre，即可自动破解。然后发送到kindle/邮箱即可。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用DeDRM去除kindle的DRM保护&quot;&gt;&lt;a href=&quot;#使用DeDRM去除kindle的DRM保护&quot; class=&quot;headerlink&quot; title=&quot;使用DeDRM去除kindle的DRM保护&quot;&gt;&lt;/a&gt;使用DeDRM去除kindle的DRM保护&lt;/
      
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装nginx小结</title>
    <link href="http://yoursite.com/2016/12/21/Mac-%E5%AE%89%E8%A3%85nginx%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2016/12/21/Mac-安装nginx小结/</id>
    <published>2016-12-21T02:52:23.000Z</published>
    <updated>2018-01-23T05:04:51.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac下配置nginx"><a href="#Mac下配置nginx" class="headerlink" title="Mac下配置nginx"></a>Mac下配置nginx</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p><code>brew install nginx</code><br>在终端中执行上面的指令，即可安装nginx的最新稳定版。<br>（以下所有教程只针对brew安装的nginx，其他版本未经测试）<br><a id="more"></a></p><h3 id="查看安装的nginx版本"><a href="#查看安装的nginx版本" class="headerlink" title="查看安装的nginx版本"></a>查看安装的nginx版本</h3><p>执行<code>nginx -v</code>即可查看当前nginx版本</p><h3 id="以管理员权限启动nginx"><a href="#以管理员权限启动nginx" class="headerlink" title="以管理员权限启动nginx"></a>以管理员权限启动nginx</h3><p><code>sudo nginx</code><br>如果启动成功，此时可以在浏览器地址栏输入”localhost:8080”，可以打开默认页面。<br>效果如下：<br><img src="http://ww4.sinaimg.cn/large/68cfab99jw1fay8kx5mcqj21kw0h5q61.jpg" alt="nginx配置成功效果图"></p><h3 id="配置启动目录"><a href="#配置启动目录" class="headerlink" title="配置启动目录"></a>配置启动目录</h3><p>目前nginx监听的端口是8080，存放代码的路径是”/usr/local/var/www”，可以在nginx的配置文件中看到，所以现在就要修改nginx配置文件中的代码路径，来部署我们自己的代码。<br>如果通过命令行来修改，执行<br><code>vim /usr/local/etc/nginx/nginx.conf</code></p><p>打开nginx.conf文件，找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">       listen       8080;</div><div class="line">       server_name  localhost;</div><div class="line">       </div><div class="line">       #access_log  logs/host.access.log  main;</div><div class="line">   </div><div class="line">       location / &#123;</div><div class="line">           root   html;</div><div class="line">           index  index.html index.htm;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>其中listen 后面是端口号，server_name是匹配的url地址，location中的root是代码的根目录，index是启动项的名称。<br>nginx的一大优势是可以同时监听多个端口，所以我们可以在下面再启动一个server，定义如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">   listen       80;</div><div class="line">   server_name  localhost;</div><div class="line">    </div><div class="line">   #access_log  logs/host.access.log  main;</div><div class="line">    </div><div class="line">   location / &#123;</div><div class="line">       root   /Users/user/www;</div><div class="line">       index  index.html index.htm;</div><div class="line">   &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>此时在地址栏中输入”localhost:80”即可访问对应的目录。</p><h2 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h2><h3 id="报错”nginx-emerg-bind-to-0-0-0-0-8080-failed-48-Address-already-in-use-”"><a href="#报错”nginx-emerg-bind-to-0-0-0-0-8080-failed-48-Address-already-in-use-”" class="headerlink" title="报错”nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)”"></a>报错”nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)”</h3><p>这种情况是端口已经被占用，可能是之前启动了   apache服务，已经占用了80端口，把listen的端口换一个就可以</p><h3 id="报错”403-Forbidden”"><a href="#报错”403-Forbidden”" class="headerlink" title="报错”403 Forbidden”"></a>报错”403 Forbidden”</h3><p>这种情况是nginx的user项是nobody，无权访问当前的目录，网上有两种解决方法，比较简单的是直接修改user为root或者当前的用户名，user配置在nginx.conf的第一行，将其修改为<code>#user root</code></p><p>然后在终端里执行<code>sudo nginx -s reload</code>重新启动nginx。</p><p>第二种方法是为当前目录添加权限，使任何人都可以访问，在终端里依次执行以下命令。</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">chmod o+x User/user</div><div class="line">chmod o+x User/user/Documents</div><div class="line">...</div><div class="line">chmod o+x User/user/.../html</div><div class="line">chmod o+x User/user/.../html/js</div><div class="line">chmod o+x User/user/.../html/css</div><div class="line">chmod o+x User/user/.../html/img</div></pre></td></tr></table></figure>这样可以为各级目录添加权限，但很麻烦，建议使用第一种方法。</code></pre><h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo nginx              #启动nginx</div><div class="line">sudo nginx -s reload    #修改配置后重新加载生效</div><div class="line">sudo nginx -s reopen   #重新打开日志文件</div><div class="line">sudo nginx -s stop  #快速停止nginx</div><div class="line">sudo nginx -s quit  #完整有序的停止nginx</div><div class="line">sudo nginx -t     #测试当前配置文件是否正确</div></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="http://learnaholic.me/2012/10/10/installing-nginx-in-mac-os-x-mountain-lion/" target="_blank" rel="noopener">Mac下nginx配置</a></li><li><a href="http://itindex.net/detail/52181-nginx.conf-nginx" target="_blank" rel="noopener">ngnix权限问题</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mac下配置nginx&quot;&gt;&lt;a href=&quot;#Mac下配置nginx&quot; class=&quot;headerlink&quot; title=&quot;Mac下配置nginx&quot;&gt;&lt;/a&gt;Mac下配置nginx&lt;/h2&gt;&lt;h3 id=&quot;安装nginx&quot;&gt;&lt;a href=&quot;#安装nginx&quot; class=&quot;headerlink&quot; title=&quot;安装nginx&quot;&gt;&lt;/a&gt;安装nginx&lt;/h3&gt;&lt;p&gt;&lt;code&gt;brew install nginx&lt;/code&gt;&lt;br&gt;在终端中执行上面的指令，即可安装nginx的最新稳定版。&lt;br&gt;（以下所有教程只针对brew安装的nginx，其他版本未经测试）&lt;br&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
</feed>
